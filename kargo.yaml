apiVersion: kargo.akuity.io/v1alpha1
kind: Project
metadata:
  name: kargo-ownapp
spec:
  promotionPolicies:
  - stage: test
    autoPromotionEnabled: true
  - stage: uat
    autoPromotionEnabled: true
  # prod is handled manually

--- # in case you GitHub repo or ANY repo is private 
# apiVersion: v1
# kind: Secret
# metadata:
#   name: github-credentials
#   namespace: kargo-ownapp
#   labels:
#     kargo.akuity.io/cred-type: git
# stringData:
#   username: username
#   password: a_token
#   repoURL: url
# ---

apiVersion: kargo.akuity.io/v1alpha1
kind: Warehouse
metadata:
  name: kargo-ownapp
  namespace: kargo-ownapp
spec:
  freightCreationPolicy: Automatic
  interval: 3m0s # check every 3 minutes
  subscriptions:
  - image:
      discoveryLimit: 3
      imageSelectionStrategy: SemVer
      repoURL: ghcr.io/valkiriaaquatica/nginx # this is my image packe in this github, they are public
      strictSemvers: true
  - image:
      discoveryLimit: 3
      imageSelectionStrategy: SemVer
      repoURL: ghcr.io/valkiriaaquatica/nginx2 # this is my image packe in this github, they are public
      strictSemvers: true
  - git:
      repoURL: https://github.com/valkiriaaquatica/demo-kargo.git
      branch: main
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: test
  namespace: kargo-ownapp
  annotations:
    kargo.akuity.io/color: red
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: kargo-ownapp
    sources:
      direct: true
  promotionTemplate:
    spec:
      vars:
      - name: gitopsRepo
        value: "https://github.com/valkiriaaquatica/demo-kargo.git"
      - name: imageRepo1
        value: ghcr.io/valkiriaaquatica/nginx
      - name: imageRepo2
        value: ghcr.io/valkiriaaquatica/nginx2
      - name: srcPath
        value: ./src
      - name: outPath
        value: ./out
      - name: chartPath
        value: "./src/charts/helm-chart-own"
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitopsRepo }}
          checkout:
          - branch: main
            path: ${{ vars.srcPath }}
          - branch: stage/${{ ctx.stage }}
            create: true
            path: ${{ vars.outPath }}
      - uses: git-clear
        config:
          path: ${{ vars.outPath }}
      - uses: yaml-update
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}/values.yaml
          updates:
          - key: deployment1.image.tag
            value: ${{ imageFrom(vars.imageRepo1).Tag }}
          - key: deployment2.image.tag
            value: ${{ imageFrom(vars.imageRepo2).Tag }}
      - uses: kustomize-build
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}
          outPath: ${{ vars.outPath }}/manifests.yaml
      - uses: git-commit
        as: commit
        config:
          path: ${{ vars.outPath }}
          messageFromSteps:
          - update-images
      - uses: git-push
        config:
          path: ${{ vars.outPath }}
      - uses: argocd-update
        config:
          apps:
          - name: kargo-ownapp-${{ ctx.stage }}
            sources:
            - repoURL: ${{ vars.gitopsRepo }}
              desiredRevision: ${{ outputs.commit.commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: uat
  namespace: kargo-ownapp
  annotations:
    kargo.akuity.io/color: green
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: kargo-ownapp
    sources:
      stages:
      - test
  promotionTemplate:
    spec:
      vars:
      - name: gitopsRepo
        value: "https://github.com/valkiriaaquatica/demo-kargo.git"
      - name: imageRepo1
        value: ghcr.io/valkiriaaquatica/nginx
      - name: imageRepo2
        value: ghcr.io/valkiriaaquatica/nginx2
      - name: srcPath
        value: ./src
      - name: outPath
        value: ./out
      - name: chartPath
        value: "./src/charts/helm-chart-own"
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitopsRepo }}
          checkout:
          - branch: main
            path: ${{ vars.srcPath }}
          - branch: stage/${{ ctx.stage }}
            create: true
            path: ${{ vars.outPath }}
      - uses: git-clear
        config:
          path: ${{ vars.outPath }}
      - uses: yaml-update
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}/values.yaml
          updates:
          - key: deployment1.image.tag
            value: ${{ imageFrom(vars.imageRepo1).Tag }}
          - key: deployment2.image.tag
            value: ${{ imageFrom(vars.imageRepo2).Tag }}
      - uses: kustomize-build
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}
          outPath: ${{ vars.outPath }}/manifests.yaml
      - uses: git-commit
        as: commit
        config:
          path: ${{ vars.outPath }}
          messageFromSteps:
          - update-images
      - uses: git-push
        config:
          path: ${{ vars.outPath }}
      - uses: argocd-update
        config:
          apps:
          - name: kargo-ownapp-${{ ctx.stage }}
            sources:
            - repoURL: ${{ vars.gitopsRepo }}
              desiredRevision: ${{ outputs.commit.commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod-us-east-1
  namespace: kargo-ownapp
  annotations:
    kargo.akuity.io/color: amber
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: kargo-ownapp
    sources:
      stages:
      - uat
  promotionTemplate:
    spec:
      vars:
      - name: gitopsRepo
        value: "https://github.com/valkiriaaquatica/demo-kargo.git"
      - name: imageRepo1
        value: ghcr.io/valkiriaaquatica/nginx
      - name: imageRepo2
        value: ghcr.io/valkiriaaquatica/nginx2
      - name: srcPath
        value: ./src
      - name: outPath
        value: ./out
      - name: chartPath
        value: "./src/charts/helm-chart-own"
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitopsRepo }}
          checkout:
          - branch: main
            path: ${{ vars.srcPath }}
          - branch: stage/${{ ctx.stage }}
            create: true
            path: ${{ vars.outPath }}
      - uses: git-clear
        config:
          path: ${{ vars.outPath }}
      - uses: yaml-update
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}/values.yaml
          updates:
          - key: deployment1.image.tag
            value: ${{ imageFrom(vars.imageRepo1).Tag }}
          - key: deployment2.image.tag
            value: ${{ imageFrom(vars.imageRepo2).Tag }}
      - uses: kustomize-build
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}
          outPath: ${{ vars.outPath }}/manifests.yaml
      - uses: git-commit
        as: commit
        config:
          path: ${{ vars.outPath }}
          messageFromSteps:
          - update-images
      - uses: git-push
        config:
          path: ${{ vars.outPath }}
      - uses: argocd-update
        config:
          apps:
          - name: kargo-ownapp-${{ ctx.stage }}
            sources:
            - repoURL: ${{ vars.gitopsRepo }}
              desiredRevision: ${{ outputs.commit.commit }}
---
apiVersion: kargo.akuity.io/v1alpha1
kind: Stage
metadata:
  name: prod-us-west-1
  namespace: kargo-ownapp
  annotations:
    kargo.akuity.io/color: amber
spec:
  requestedFreight:
  - origin:
      kind: Warehouse
      name: kargo-ownapp
    sources:
      stages:
      - uat
  promotionTemplate:
    spec:
      vars:
      - name: gitopsRepo
        value: "https://github.com/valkiriaaquatica/kargo-apps.git"
      - name: imageRepo1
        value: ghcr.io/valkiriaaquatica/nginx
      - name: imageRepo2
        value: ghcr.io/valkiriaaquatica/nginx2
      - name: srcPath
        value: ./src
      - name: outPath
        value: ./out
      - name: chartPath
        value: "./src/charts/helm-chart-own"
      steps:
      - uses: git-clone
        config:
          repoURL: ${{ vars.gitopsRepo }}
          checkout:
          - branch: main
            path: ${{ vars.srcPath }}
          - branch: stage/${{ ctx.stage }}
            create: true
            path: ${{ vars.outPath }}
      - uses: git-clear
        config:
          path: ${{ vars.outPath }}
      - uses: yaml-update
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}/values.yaml
          updates:
          - key: deployment1.image.tag
            value: ${{ imageFrom(vars.imageRepo1).Tag }}
          - key: deployment2.image.tag
            value: ${{ imageFrom(vars.imageRepo2).Tag }}
      - uses: kustomize-build
        config:
          path: ${{ vars.srcPath }}/stages/${{ ctx.stage }}
          outPath: ${{ vars.outPath }}/manifests.yaml
      - uses: git-commit
        config:
          path: ${{ vars.outPath }}
          message: rendered updated manifests
      - uses: git-push
        as: push
        config:
          path: ${{ vars.outPath }}
          generateTargetBranch: true
      - uses: git-open-pr
        as: open-pr
        config:
          provider: github
          repoURL: ${{ vars.gitopsRepo }}
          createTargetBranch: true
          sourceBranch: ${{ outputs.push.branch }}
          targetBranch: stage/${{ ctx.stage }}
      - uses: git-wait-for-pr
        as: wait-for-pr
        config:
          provider: github
          repoURL:  ${{ vars.gitopsRepo }}
          prNumber: ${{ outputs['open-pr'].prNumber }}
      # - uses: git-commit
      #   as: commit
      #   config:
      #     path: ${{ vars.outPath }}
      #     messageFromSteps:
      #     - update-images
      # - uses: git-push
      #   config:
      #     path: ${{ vars.outPath }}
      - uses: argocd-update
        config:
          apps:
          - name: kargo-ownapp-${{ ctx.stage }}
            sources:
            - repoURL: ${{ vars.gitopsRepo }}
              # desiredRevision: ${{ outputs.commit.commit }}
              desiredRevision: ${{ outputs['wait-for-pr'].commit }}